- type: replace
  path: /instance_groups/name=apply-addons/jobs/name=apply-specs/properties/specs?/metrics-server?
  value: |
    ---
    # ------------------- Auth Delegator ------------------- #

    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: metrics-server:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
    - kind: ServiceAccount
      name: metrics-server
      namespace: kube-system

    ---
    # ------------------- Auth Reader ------------------- #

    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: metrics-server-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
    - kind: ServiceAccount
      name: metrics-server
      namespace: kube-system

    ---
    # ------------------- Metrics APIService ------------------- #

    apiVersion: apiregistration.k8s.io/v1beta1
    kind: APIService
    metadata:
      name: v1beta1.metrics.k8s.io
    spec:
      service:
        name: metrics-server
        namespace: kube-system
      group: metrics.k8s.io
      version: v1beta1
      insecureSkipTLSVerify: true
      groupPriorityMinimum: 100
      versionPriority: 100

    ---
    # ------------------- Metrics Server Deployment ------------------- #

    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: metrics-server
      namespace: kube-system
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: metrics-server
      namespace: kube-system
      labels:
        k8s-app: metrics-server
        version: v0.3.1
    spec:
      selector:
        matchLabels:
          k8s-app: metrics-server
      template:
        metadata:
          name: metrics-server
          labels:
            k8s-app: metrics-server
        spec:
          serviceAccountName: metrics-server
          volumes:
          # mount in tmp so we can safely use from-scratch images and/or read-only containers
          - name: tmp-dir
            emptyDir: {}
          - name: metrics-server-secrets
            secret:
              secretName: metrics-server-certs
          containers:
          - name: metrics-server
            image: k8s.gcr.io/metrics-server-amd64:v0.3.2
            imagePullPolicy: IfNotPresent
            command:
            - /metrics-server
            - --kubelet-preferred-address-types=InternalIP
            - --kubelet-insecure-tls
            - --client-ca-file=/var/run/kubernetes/client-ca.crt
            - --requestheader-client-ca-file=/var/run/kubernetes/requestheader-client-ca.crt
            - --tls-cert-file=/var/run/kubernetes/client.crt
            - --tls-private-key-file=/var/run/kubernetes/client.key
            ports:
            - containerPort: 443
              name: https
              protocol: TCP
            volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            - name: metrics-server-secrets
              mountPath: /var/run/kubernetes
          tolerations:
            - key: "CriticalAddonsOnly"
              operator: "Exists"

    ---
    # ------------------- Metrics Server Service ------------------- #

    apiVersion: v1
    kind: Service
    metadata:
      name: metrics-server
      namespace: kube-system
      labels:
        kubernetes.io/name: "Metrics-server"
    spec:
      selector:
        k8s-app: metrics-server
      ports:
      - port: 443
        protocol: TCP
        targetPort: https

    ---
    # ------------------- Resource Reader ------------------- #

    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: system:metrics-server
    rules:
    - apiGroups:
      - ""
      resources:
      - nodes/stats
      verbs:
      - create
      - get
    - apiGroups:
      - ""
      resources:
      - pods
      - nodes
      - namespaces
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - "extensions"
      resources:
      - deployments
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: system:metrics-server
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:metrics-server
    subjects:
    - kind: ServiceAccount
      name: metrics-server
      namespace: kube-system
