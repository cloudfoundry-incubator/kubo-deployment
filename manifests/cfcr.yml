name: cfcr

releases:
- name: kubo-etcd
  version: 8
  url: https://github.com/pivotal-cf-experimental/kubo-etcd/releases/download/v8/kubo-etcd.8.tgz
  sha1: 267bf72c9f4680b6e1cf542283c653abc74469e2
- name: kubo
  version: latest
- name: docker
  version: 30.1.4
  url: https://github.com/cloudfoundry-community/docker-boshrelease/releases/download/v30.1.4/docker-30.1.4.tgz
  sha1: f79a70452b3ddae52f5ac78dd37ff8d9e6ec19e2
- name: bosh-dns
  sha1: e38d3e5edd16ce2dca778440b636ab1ea61f892f
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-release?v=0.0.11
  version: 0.0.11

stemcells:
- alias: trusty
  os: ubuntu-trusty
  version: "3468.21"

addons:
- name: bosh-dns
  include:
    stemcells:
    - os: ubuntu-trusty
  jobs:
  - name: bosh-dns
    release: bosh-dns
    properties:
      cache:
        enabled: true
      health:
        enabled: true
        server:
          tls: ((/dns_healthcheck_server_tls))
        client:
          tls: ((/dns_healthcheck_client_tls))
- name: bosh-dns-aliases
  jobs:
  - name: kubo-dns-aliases
    release: kubo

instance_groups:
- name: master
  instances: 1
  networks:
  - name: default
  azs: [z1,z2,z3]
  jobs:
  - name: secure-var-vcap
    release: kubo
  - name: flanneld
    release: kubo
  - name: kube-apiserver
    release: kubo
    properties:
      admin-username: admin
      admin-password: ((kubo-admin-password))
      kubelet-password: ((kubelet-password))
      kube-proxy-password: ((kube-proxy-password))
      kube-controller-manager-password: ((kube-controller-manager-password))
      kube-scheduler-password: ((kube-scheduler-password))
      route-sync-password: ((route-sync-password))
      backend_port: 8443 # Bosh links hack
      port: 8443
      authorization-mode: rbac
      service-account-public-key: ((service-account-key.public_key))
      tls:
        kubernetes:
          ca: ((tls-kubernetes.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: kube-controller-manager
    release: kubo
    properties:
      api-token: ((kube-controller-manager-password))
      service-account-private-key: ((service-account-key.private_key))
      tls:
        kubernetes: ((tls-kubernetes))
  - name: kube-scheduler
    release: kubo
    properties:
      api-token: ((kube-scheduler-password))
      tls:
        kubernetes: ((tls-kubernetes))
  - name: kubernetes-system-specs
    release: kubo
    properties:
      api-token: ((kubelet-password))
      admin-username: admin
      admin-password: ((kubo-admin-password))
      authorization-mode: rbac
      tls:
        kubernetes: ((tls-kubernetes))
        heapster: ((tls-heapster))
        influxdb: ((tls-influxdb))
        kubernetes-dashboard: ((tls-kubernetes-dashboard))
  - name: etcd
    release: kubo-etcd
    properties:
      etcd:
        dns_health_check_host: 169.254.0.2 # this is the default BOSH DNS nameserver
        advertise_urls_dns_suffix: etcd.cfcr.internal
        require_ssl: true
        peer_require_ssl: true
        delete_data_dir_on_stop: false
        ca_cert: ((tls-etcd-server.ca))
        server_cert: ((tls-etcd-server.certificate))
        server_key: ((tls-etcd-server.private_key))
        client_cert: ((tls-etcd-client.certificate))
        client_key: ((tls-etcd-client.private_key))
        peer_ca_cert: ((tls-etcd-peer.ca))
        peer_cert: ((tls-etcd-peer.certificate))
        peer_key: ((tls-etcd-peer.private_key))
  stemcell: trusty
  vm_type: small
  persistent_disk: 5120

- name: worker
  instances: 3
  networks:
  - name: default
  azs: [z1,z2,z3]
  jobs:
  - name: secure-var-vcap
    release: kubo
  - name: flanneld
    release: kubo
  - name: docker
    release: docker
    properties:
      bip: 172.17.0.1/24
      flannel: true
      iptables: false
      ip_masq: false
      log_level: error
      store_dir: /var/vcap/data
      storage_driver: overlay
      default_ulimits: [ "nofile=65536" ]
      tls_cacert: ((tls-docker.ca))
      tls_cert:  ((tls-docker.certificate))
      tls_key: ((tls-docker.private_key))
      env: {}
  - name: kubelet
    release: kubo
    properties:
      api-token: ((kubelet-password))
      tls:
        kubernetes: ((tls-kubernetes))
        kubelet: ((tls-kubelet))
  - name: kube-proxy
    release: kubo
    properties:
      tls:
        kubernetes: ((tls-kubernetes))
      api-token: ((kube-proxy-password))
  stemcell: trusty
  vm_type: small-highmem
  persistent_disk: 10240

update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 10000-300000
  update_watch_time: 10000-300000

variables:
- name: kubo-admin-password
  type: password
- name: kubelet-password
  type: password
- name: kube-proxy-password
  type: password
- name: kube-controller-manager-password
  type: password
- name: kube-scheduler-password
  type: password
- name: route-sync-password
  type: password

- name: kubo_ca
  type: certificate
  options:
    is_ca: true
    common_name: ca

- name: tls-kubelet
  type: certificate
  options:
    ca: kubo_ca
    organization: "system:nodes"
    common_name: kubelet.cfcr.internal
    alternative_names: []

- name: tls-kubernetes
  type: certificate
  options:
    ca: kubo_ca
    organization: "system:masters"
    common_name: master.cfcr.internal
    alternative_names:
    - 10.100.200.1
    - kubernetes
    - kubernetes.default
    - kubernetes.default.svc
    - kubernetes.default.svc.cluster.local
    - master.cfcr.internal

- name: service-account-key
  type: rsa

- name: tls-docker
  type: certificate
  options:
    ca: kubo_ca
    common_name: docker.cfcr.internal

- name: tls-etcd-server
  type: certificate
  options:
    ca: kubo_ca
    common_name: etcd.cfcr.internal
    alternative_names:
    - "*.etcd.cfcr.internal"

- name: tls-etcd-client
  type: certificate
  options:
    ca: kubo_ca
    common_name: etcdClient

- name: tls-etcd-peer
  type: certificate
  options:
    ca: kubo_ca
    common_name: "*.etcd.cfcr.internal"

- name: tls-heapster
  type: certificate
  options:
    ca: kubo_ca
    common_name: heapster
    alternative_names:
    - "heapster.kube-system.svc.cluster.local"

- name: tls-influxdb
  type: certificate
  options:
    ca: kubo_ca
    common_name: monitoring-influxdb
    alternative_names: []

- name: kubernetes-dashboard-ca
  type: certificate
  options:
    is_ca: true
    common_name: ca

- name: tls-kubernetes-dashboard
  type: certificate
  options:
    ca: kubernetes-dashboard-ca
    common_name: kubernetesdashboard.cfcr.internal
    alternative_names: []

- name: /dns_healthcheck_tls_ca
  opsname: global_dns_healthcheck_tls_ca
  type: certificate
  options:
    is_ca: true
    common_name: dns-healthcheck-tls-ca

- name: /dns_healthcheck_server_tls
  opsname: global_dns_healthcheck_server_tls
  type: certificate
  options:
    ca: /dns_healthcheck_tls_ca
    common_name: health.bosh-dns
    extended_key_usage:
    - server_auth

- name: /dns_healthcheck_client_tls
  opsname: global_dns_healthcheck_client_tls
  type: certificate
  options:
    ca: /dns_healthcheck_tls_ca
    common_name: health.bosh-dns
    extended_key_usage:
    - client_auth

features:
  use_dns_addresses: true
