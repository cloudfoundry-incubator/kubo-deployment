addons:
- include:
    stemcell:
    - os: ubuntu-trusty
    - os: ubuntu-xenial
  jobs:
  - name: bosh-dns
    properties:
      api:
        client:
          tls: ((/dns_api_client_tls))
        server:
          tls: ((/dns_api_server_tls))
      cache:
        enabled: true
      health:
        client:
          tls: ((/dns_healthcheck_client_tls))
        enabled: true
        server:
          tls: ((/dns_healthcheck_server_tls))
    release: bosh-dns
  name: bosh-dns
- jobs:
  - name: kubo-dns-aliases
    release: kubo
  name: bosh-dns-aliases
features:
  use_dns_addresses: true
instance_groups:
- azs:
  - z1
  instances: 1
  jobs:
  - name: apply-specs
    properties:
      addons:
      - kube-dns
      - metrics-server
      - heapster
      - kubernetes-dashboard
      admin-password: ((kubo-admin-password))
      admin-username: admin
      api-token: ((kubelet-password))
      tls:
        heapster: ((tls-heapster))
        influxdb: ((tls-influxdb))
        kubernetes: ((tls-kubernetes))
        kubernetes-dashboard: ((tls-kubernetes-dashboard))
        metrics-server: ((tls-metrics-server))
    release: kubo
  lifecycle: errand
  name: apply-addons
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  - z2
  - z3
  instances: 3
  jobs:
  - name: bpm
    release: bpm
  - name: flanneld
    release: kubo
  - name: kube-apiserver
    properties:
      admin-password: ((kubo-admin-password))
      admin-username: admin
      k8s-args:
        audit-log-maxage: 0
        audit-log-maxbackup: 0
        audit-log-maxsize: 0
        audit-log-path: /var/vcap/sys/log/kube-apiserver/audit.log
        audit-policy-file: /var/vcap/jobs/kube-apiserver/config/audit_policy.yml
        authorization-mode: RBAC
        client-ca-file: /var/vcap/jobs/kube-apiserver/config/kubernetes.pem
        disable-admission-plugins: []
        enable-admission-plugins: []
        enable-aggregator-routing: true
        enable-bootstrap-token-auth: true
        enable-swagger-ui: true
        etcd-cafile: /var/vcap/jobs/kube-apiserver/config/etcd-ca.crt
        etcd-certfile: /var/vcap/jobs/kube-apiserver/config/etcd-client.crt
        etcd-keyfile: /var/vcap/jobs/kube-apiserver/config/etcd-client.key
        kubelet-client-certificate: /var/vcap/jobs/kube-apiserver/config/kubelet-client-cert.pem
        kubelet-client-key: /var/vcap/jobs/kube-apiserver/config/kubelet-client-key.pem
        proxy-client-cert-file: /var/vcap/jobs/kube-apiserver/config/kubernetes.pem
        proxy-client-key-file: /var/vcap/jobs/kube-apiserver/config/kubernetes-key.pem
        requestheader-allowed-names: aggregator
        requestheader-client-ca-file: /var/vcap/jobs/kube-apiserver/config/kubernetes.pem
        requestheader-extra-headers-prefix: X-Remote-Extra-
        requestheader-group-headers: X-Remote-Group
        requestheader-username-headers: X-Remote-User
        runtime-config: api/v1
        secure-port: 8443
        service-account-key-file: /var/vcap/jobs/kube-apiserver/config/service-account-public-key.pem
        service-cluster-ip-range: 10.100.200.0/24
        storage-media-type: application/json
        tls-cert-file: /var/vcap/jobs/kube-apiserver/config/kubernetes.pem
        tls-private-key-file: /var/vcap/jobs/kube-apiserver/config/kubernetes-key.pem
        token-auth-file: /var/vcap/jobs/kube-apiserver/config/tokens.csv
        v: 2
      kube-controller-manager-password: ((kube-controller-manager-password))
      kube-proxy-password: ((kube-proxy-password))
      kube-scheduler-password: ((kube-scheduler-password))
      kubelet-drain-password: ((kubelet-drain-password))
      kubelet-password: ((kubelet-password))
      service-account-public-key: ((service-account-key.public_key))
      tls:
        kubelet-client: ((tls-kubelet-client))
        kubernetes:
          ca: ((tls-kubernetes.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
    release: kubo
  - name: kube-controller-manager
    properties:
      api-token: ((kube-controller-manager-password))
      cluster-signing: ((kubo_ca))
      k8s-args:
        cluster-signing-cert-file: /var/vcap/jobs/kube-controller-manager/config/cluster-signing-ca.pem
        cluster-signing-key-file: /var/vcap/jobs/kube-controller-manager/config/cluster-signing-key.pem
        kubeconfig: /var/vcap/jobs/kube-controller-manager/config/kubeconfig
        root-ca-file: /var/vcap/jobs/kube-controller-manager/config/ca.pem
        service-account-private-key-file: /var/vcap/jobs/kube-controller-manager/config/service-account-private-key.pem
        terminated-pod-gc-threshold: 100
        tls-cert-file: /var/vcap/jobs/kube-controller-manager/config/kube-controller-manager-cert.pem
        tls-private-key-file: /var/vcap/jobs/kube-controller-manager/config/kube-controller-manager-private-key.pem
        use-service-account-credentials: true
        v: 2
      service-account-private-key: ((service-account-key.private_key))
      tls:
        kubernetes: ((tls-kubernetes))
        kube-controller-manager: ((tls-kube-controller-manager))
    release: kubo
  - name: kube-scheduler
    properties:
      api-token: ((kube-scheduler-password))
      kube-scheduler-configuration:
        apiVersion: componentconfig/v1alpha1
        clientConnection:
          kubeconfig: /var/vcap/jobs/kube-scheduler/config/kubeconfig
        disablePreemption: false
        kind: KubeSchedulerConfiguration
      tls:
        kubernetes: ((tls-kubernetes))
    release: kubo
  - name: kubernetes-roles
    properties:
      admin-password: ((kubo-admin-password))
      admin-username: admin
      tls:
        kubernetes: ((tls-kubernetes))
    release: kubo
  - name: etcd
    properties:
      etcd:
        dns_suffix: etcd.cfcr.internal
      tls:
        etcd:
          ca: ((tls-etcd-v0-17-0.ca))
          certificate: ((tls-etcd-v0-17-0.certificate))
          private_key: ((tls-etcd-v0-17-0.private_key))
        etcdctl:
          ca: ((tls-etcdctl.ca))
          certificate: ((tls-etcdctl.certificate))
          private_key: ((tls-etcdctl.private_key))
        peer:
          ca: ((tls-etcd-v0-17-0.ca))
          certificate: ((tls-etcd-v0-17-0.certificate))
          private_key: ((tls-etcd-v0-17-0.private_key))
    release: cfcr-etcd
  - name: smoke-tests
    release: kubo
  name: master
  networks:
  - name: default
  persistent_disk: 5120
  stemcell: default
  vm_type: small
- azs:
  - z1
  - z2
  - z3
  instances: 3
  jobs:
  - name: flanneld
    release: kubo
  - name: docker
    properties:
      bridge: cni0
      default_ulimits:
      - nofile=65536
      env: {}
      flannel: true
      ip_masq: false
      iptables: false
      live_restore: true
      log_level: error
      log_options:
      - max-size=128m
      - max-file=2
      storage_driver: overlay2
      store_dir: /var/vcap/data
    release: docker
  - name: kubernetes-dependencies
    release: kubo
  - name: kubelet
    properties:
      api-token: ((kubelet-password))
      drain-api-token: ((kubelet-drain-password))
      k8s-args:
        allow-privileged: false
        cni-bin-dir: /var/vcap/jobs/kubelet/packages/cni/bin
        container-runtime: docker
        docker: unix:///var/vcap/sys/run/docker/docker.sock
        docker-endpoint: unix:///var/vcap/sys/run/docker/docker.sock
        keep-terminated-pod-volumes: false
        kubeconfig: /var/vcap/jobs/kubelet/config/kubeconfig
        network-plugin: cni
      kubelet-configuration:
        apiVersion: kubelet.config.k8s.io/v1beta1
        authentication:
          anonymous:
            enabled: false
          x509:
            clientCAFile: /var/vcap/jobs/kubelet/config/kubelet-client-ca.pem
        authorization:
          mode: Webhook
        clusterDNS:
        - 10.100.200.10
        clusterDomain: cluster.local
        failSwapOn: false
        kind: KubeletConfiguration
        serializeImagePulls: false
        tlsCertFile: /var/vcap/jobs/kubelet/config/kubelet.pem
        tlsPrivateKeyFile: /var/vcap/jobs/kubelet/config/kubelet-key.pem
      tls:
        kubelet: ((tls-kubelet))
        kubelet-client-ca:
          certificate: ((tls-kubelet-client.ca))
        kubernetes: ((tls-kubernetes))
    release: kubo
  - name: kube-proxy
    properties:
      api-token: ((kube-proxy-password))
      kube-proxy-configuration:
        apiVersion: kubeproxy.config.k8s.io/v1alpha1
        clientConnection:
          kubeconfig: /var/vcap/jobs/kube-proxy/config/kubeconfig
        clusterCIDR: 10.200.0.0/16
        iptables:
          masqueradeAll: false
          masqueradeBit: 14
          minSyncPeriod: 0s
          syncPeriod: 30s
        kind: KubeProxyConfiguration
        mode: iptables
        portRange: ""
      tls:
        kubernetes: ((tls-kubernetes))
    release: kubo
  name: worker
  networks:
  - name: default
  stemcell: default
  vm_type: small-highmem
name: cfcr
releases:
- name: kubo
  sha1: d3f72f85fd5d5ebfcf942117f56c7ac2d6f8d81b
  url: https://github.com/cloudfoundry-incubator/kubo-release/releases/download/v0.24.0/kubo-release-0.24.0.tgz
  version: 0.24.0
- name: cfcr-etcd
  sha1: 728839a7ddd44757e31ef0fdbcd131c2be23ab0e
  url: https://github.com/cloudfoundry-incubator/cfcr-etcd-release/releases/download/v1.5.0/cfcr-etcd-release-1.5.0.tgz
  version: 1.5.0
- name: docker
  sha1: 21ead5b0c3229ffe5678a0d5a96a07a1dda47f09
  url: https://github.com/cloudfoundry-incubator/docker-boshrelease/releases/download/v32.1.0/docker-32.1.0.tgz
  version: 32.1.0
- name: bosh-dns
  sha1: d1aadbda5d60c44dec4a429cda872cf64f6d8d0b
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-release?v=1.10.0
  version: 1.10.0
- name: bpm
  sha1: 4b6ebfdaa467c04855528172b099e565d679e0f5
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=0.13.0
  version: 0.13.0
stemcells:
- alias: default
  os: ubuntu-xenial
  version: latest
update:
  canaries: 1
  canary_watch_time: 10000-300000
  max_in_flight: 1
  update_watch_time: 10000-300000
variables:
- name: kubo-admin-password
  type: password
- name: kubelet-password
  type: password
- name: kubelet-drain-password
  type: password
- name: kube-proxy-password
  type: password
- name: kube-controller-manager-password
  type: password
- name: kube-scheduler-password
  type: password
- name: kubo_ca
  options:
    common_name: ca
    is_ca: true
  type: certificate
- name: tls-kubelet
  options:
    alternative_names: []
    ca: kubo_ca
    common_name: kubelet.cfcr.internal
    organization: system:nodes
  type: certificate
- name: tls-kubelet-client
  options:
    ca: kubo_ca
    common_name: kube-apiserver.cfcr.internal
    extended_key_usage:
    - client_auth
    organization: system:masters
  type: certificate
- name: tls-kubernetes
  options:
    alternative_names:
    - 10.100.200.1
    - kubernetes
    - kubernetes.default
    - kubernetes.default.svc
    - kubernetes.default.svc.cluster.local
    - master.cfcr.internal
    ca: kubo_ca
    common_name: master.cfcr.internal
    organization: system:masters
  type: certificate
- name: service-account-key
  type: rsa
- name: tls-kube-controller-manager
  options:
    alternative_names:
    - localhost
    - 127.0.0.1
    key_usage:
    - digital_signature
    - key_encipherment
    extended_key_usage:
    - server_auth
    ca: kubo_ca
    common_name: kube-controller-manager
  type: certificate
- name: tls-etcd-v0-17-0
  options:
    ca: kubo_ca
    common_name: '*.etcd.cfcr.internal'
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
- name: tls-etcdctl
  options:
    ca: kubo_ca
    common_name: etcdClient
    extended_key_usage:
    - client_auth
  type: certificate
- name: tls-metrics-server
  options:
    alternative_names:
    - metrics-server.kube-system.svc
    ca: kubo_ca
    common_name: metrics-server
  type: certificate
- name: tls-heapster
  options:
    alternative_names:
    - heapster.kube-system.svc.cluster.local
    ca: kubo_ca
    common_name: heapster
  type: certificate
- name: tls-influxdb
  options:
    alternative_names: []
    ca: kubo_ca
    common_name: monitoring-influxdb
  type: certificate
- name: kubernetes-dashboard-ca
  options:
    common_name: ca
    is_ca: true
  type: certificate
- name: tls-kubernetes-dashboard
  options:
    alternative_names: []
    ca: kubernetes-dashboard-ca
    common_name: kubernetesdashboard.cfcr.internal
  type: certificate
- name: /dns_healthcheck_tls_ca
  opsname: global_dns_healthcheck_tls_ca
  options:
    common_name: dns-healthcheck-tls-ca
    is_ca: true
  type: certificate
- name: /dns_healthcheck_server_tls
  opsname: global_dns_healthcheck_server_tls
  options:
    ca: /dns_healthcheck_tls_ca
    common_name: health.bosh-dns
    extended_key_usage:
    - server_auth
  type: certificate
- name: /dns_healthcheck_client_tls
  opsname: global_dns_healthcheck_client_tls
  options:
    ca: /dns_healthcheck_tls_ca
    common_name: health.bosh-dns
    extended_key_usage:
    - client_auth
  type: certificate
- name: /dns_api_tls_ca
  opsname: global_dns_api_tls_ca
  options:
    common_name: dns-api-tls-ca
    is_ca: true
  type: certificate
- name: /dns_api_server_tls
  opsname: global_dns_api_server_tls
  options:
    ca: /dns_api_tls_ca
    common_name: api.bosh-dns
    extended_key_usage:
    - server_auth
  type: certificate
- name: /dns_api_client_tls
  opsname: global_dns_api_client_tls
  options:
    ca: /dns_api_tls_ca
    common_name: api.bosh-dns
    extended_key_usage:
    - client_auth
  type: certificate
