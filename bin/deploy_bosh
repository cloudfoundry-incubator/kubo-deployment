#!/bin/bash
set -e

[[ -n "$DEBUG" ]] && set -x

echo "====================================="
echo "|         KuBOSH Deployer           |"
echo "====================================="
echo ""

print_usage() {
cat << EOF
  Usage: $0 <BOSH environment path> <private or service account key filename for BOSH to use for deployments>

  * Note: Private key is required for AWS, Azure and Openstack
  * Service account key is required for GCP
EOF
}

repo_directory() {
  echo -n $(cd "$(dirname ${BASH_SOURCE[0]})/.."; pwd)
}


main() {
  local bosh_env extra_filename iaas

  if [ ! -d "${1}" ]; then
    print_usage
    exit 1
  fi

  bosh_env=$(cd "${1}"; pwd)

  iaas=$(bosh-cli int ${bosh_env}/director.yml --path /iaas)

  if ! [[ "$iaas" =~ ^(gcp|openstack|vsphere)$ ]]; then
    echo "Supported platforms are: 'gcp', 'openstack', 'vsphere'"
    echo ""
    print_usage
    exit 1
  fi

  extra_filename="$2"
  if [ "$iaas" != 'vsphere' ] && [ ! -f "${extra_filename}" ] ; then
    print_usage
    exit 1
  fi

  "deploy_$iaas" "${bosh_env}" "${extra_filename}"
  "$(repo_directory)/bin/set_bosh_alias" "${bosh_env}"
}

deploy_gcp() {
  local bosh_env service_account_filename
  bosh_env="$1"
  service_account_filename="$2"

  bosh-cli create-env "$(repo_directory)/bosh-deployment/bosh.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/gcp/cpi.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/uaa.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/powerdns.yml" \
    --ops-file "$(repo_directory)/configurations/generic/credhub.yml" \
    --ops-file "$(repo_directory)/configurations/generic/bosh-admin-client.yml" \
    --ops-file "$(repo_directory)/configurations/gcp/user-agent-config.yml" \
    --state "${bosh_env}/state.json" \
    --var-file gcp_credentials_json="${service_account_filename}" \
    --vars-store "${bosh_env}/creds.yml" \
    --vars-file "${bosh_env}/director.yml"
}

deploy_vsphere() {
  local bosh_env
  bosh_env="$1"

  bosh-cli create-env "$(repo_directory)/bosh-deployment/bosh.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/vsphere/cpi.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/uaa.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/powerdns.yml" \
    --ops-file "$(repo_directory)/configurations/generic/credhub.yml" \
    --ops-file "$(repo_directory)/configurations/generic/bosh-admin-client.yml" \
    --state "${bosh_env}/state.json" \
    --vars-store "${bosh_env}/creds.yml" \
    --vars-file "${bosh_env}/director.yml"
}

deploy_openstack() {
  local bosh_env key_filename
  bosh_env="$1"
  key_filename="$2"

  bosh-cli create-env  "$(repo_directory)/bosh-deployment/bosh.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/openstack/cpi.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/uaa.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/powerdns.yml" \
    --ops-file "$(repo_directory)/configurations/generic/credhub.yml" \
    --ops-file "$(repo_directory)/configurations/openstack/multi-tenant.yml" \
    --ops-file "$(repo_directory)/configurations/generic/bosh-admin-client.yml" \
    --state "${bosh_env}/state.json" \
    --vars-store "${bosh_env}/creds.yml" \
    --vars-file "${bosh_env}/director.yml"  \
    --vars-file "${bosh_env}/director-secrets.yml"  \
    --var-file private_key="${key_filename}"
}

[[ "$0" == "${BASH_SOURCE[0]}" ]] && main "$@"
