#!/bin/bash -e

[ -z "$DEBUG" ] || set -x
BOSH_ENV=$1
key_filename=$2
current_directory=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

echo "====================================="
echo "|         KuBOSH Deployer           |"
echo "====================================="
echo ""

print_usage() {
cat << EOF
  Usage: $0 <BOSH environment path> <private or service account key filename for BOSH to use for deployments>

  * Note: Private key is required for AWS, Azure and Openstack
  * Service account key is required for GCP
EOF
}
if [ ! -d "${BOSH_ENV}" ]; then
  print_usage
  exit 1
fi

if [ -z "${key_filename}" ]; then
  print_usage
  exit 1
fi

main() {
  iaas=$(cat "$BOSH_ENV"/iaas)
  if [ "$iaas" != 'gcp' ] && [ "$iaas" != 'openstack' ]; then
    echo "Supported platforms are: 'gcp', 'openstack'"
    echo ""
    print_usage
    exit 1
  fi
  pushd "$(dirname "$0")/.." > /dev/null
    "deploy_$iaas"
    generate_default_ca "${BOSH_ENV}"
    setup_bosh_alias
  popd
}

generate_default_ca() {
  local bosh_env=$1

  local credhub_password bosh_hostname
  credhub_password="$(bosh-cli int "${bosh_env}/creds.yml" --path '/credhub_user_password')"
  bosh_hostname="$(bosh-cli int "${bosh_env}/director.yml" --path '/internal_ip')"

  credhub api --skip-tls-validation -s "${bosh_hostname}:8844"
  credhub login -u credhub-user -p "${credhub_password}"
  credhub ca-get -n default || credhub ca-generate -n default -c "${bosh_hostname}"
}

deploy_gcp() {
    bosh-cli create-env "${current_directory}/bosh-deployment/bosh.yml"  \
      --ops-file "${current_directory}/bosh-deployment/gcp/cpi.yml" \
      --ops-file "${current_directory}/bosh-deployment/uaa.yml" \
      --ops-file "${current_directory}/bosh-deployment/powerdns.yml" \
      --ops-file "${current_directory}/configurations/generic/credhub.yml" \
      --ops-file "${current_directory}/configurations/generic/bosh-admin-client.yml" \
      --state "${BOSH_ENV}/state.json" \
      --var-file gcp_credentials_json="${key_filename}" \
      --vars-store "${BOSH_ENV}/creds.yml" \
      --vars-file "${BOSH_ENV}/director.yml"
}

deploy_openstack() {
    bosh-cli create-env  "${current_directory}/bosh-deployment/bosh.yml"  \
      --ops-file "${current_directory}/bosh-deployment/openstack/cpi.yml" \
      --ops-file "${current_directory}/bosh-deployment/uaa.yml" \
      --ops-file "${current_directory}/bosh-deployment/powerdns.yml" \
      --ops-file "${current_directory}/configurations/generic/credhub.yml" \
      --ops-file "${current_directory}/configurations/openstack/multi-tenant.yml" \
      --ops-file "${current_directory}/configurations/generic/bosh-admin-client.yml" \
      --state "${BOSH_ENV}/state.json" \
      --vars-store "${BOSH_ENV}/creds.yml" \
      --vars-file "${BOSH_ENV}/director.yml"  \
      --vars-file "${BOSH_ENV}/director-secrets.yml"  \
      --var-file private_key="${key_filename}"
}

setup_bosh_alias() {
  # shellcheck disable=SC1091
  . ./bin/lib/deploy_utils

  local bosh_director_hostname bosh_director_name

  bosh_director_hostname=$(get_setting "director.yml" /internal_ip)
  bosh_director_name=$(get_setting "director.yml" /director_name)

  if [ -z "${bosh_director_hostname}" ]; then
    echo "Expected bosh director IP address specified as 'internal_ip' in director.yml"
    exit 1
  fi

  ca_cert=$(bosh-cli int "${BOSH_ENV}/creds.yml" --path=/default_ca/ca)
  BOSH_CLIENT=bosh_admin BOSH_CLIENT_SECRET=$(get_bosh_secret) BOSH_CA_CERT="${ca_cert}" bosh-cli alias-env "${bosh_director_name}" -e "$bosh_director_hostname"
}

main
