#!/usr/bin/env bash
set -e

[[ -n "$DEBUG" ]] && set -x

echo "====================================="
echo "|         KuBOSH Deployer           |"
echo "====================================="
echo ""

print_usage() {
cat >&2 << EOF
  Usage: $0 <BOSH environment path> <private or service account key filename for BOSH to use for deployments>

  * Note: Private key is required for AWS, Azure and OpenStack
  * Service account key is required for GCP
EOF
}

repo_directory() {
  echo -n "$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
}


main() {
  local bosh_env extra_filename iaas bosh_manifest

  if [ ! -d "${1}" ]; then
    echo "'$1' is not a directory" >&2
    echo >&2
    print_usage
    exit 1
  fi

  bosh_env=$(cd "${1}"; pwd)

  iaas=$(bosh-cli int "${bosh_env}/director.yml" --path /iaas)

  if ! [[ "$iaas" =~ ^(gcp|openstack|vsphere|aws)$ ]]; then
    echo "Supported platforms are: 'gcp', 'openstack', 'vsphere', 'aws'"
    echo ""
    print_usage
    exit 1
  fi

  extra_filename="$2"
  if [ "$iaas" != 'vsphere' ] && [ ! -f "${extra_filename}" ] ; then
    print_usage
    exit 1
  fi

  bosh_manifest=$("generate_manifest_$iaas" "${bosh_env}" "${extra_filename}")
  deploy_bosh "${bosh_env}" "${bosh_manifest}"
  "$(repo_directory)/bin/set_bosh_alias" "${bosh_env}"

  BOSH_ENV="$bosh_env" source "$(repo_directory)/bin/set_bosh_environment"
  bosh-cli update-runtime-config -n "$(repo_directory)/bosh-deployment/runtime-configs/dns.yml"
}

deploy_bosh() {
  local bosh_manifest bosh_env
  bosh_env=$1
  bosh_manifest=$2

  bosh_manifest_file="$(mktemp)"
  echo "${bosh_manifest}" > "${bosh_manifest_file}"
  bosh-cli create-env "${bosh_manifest_file}" \
    --vars-store "${bosh_env}/creds.yml" \
    --state "${bosh_env}/state.json"
}

generate_manifest_gcp() {
  local bosh_env service_account_filename bosh_manifest
  bosh_env="$1"
  service_account_filename="$2"

  generate_manifest_generic "$bosh_env" \
    --ops-file "$(repo_directory)/bosh-deployment/gcp/cpi.yml" \
    --ops-file "$(repo_directory)/configurations/gcp/user-agent-config.yml" \
    --var-file gcp_credentials_json="${service_account_filename}"
}

generate_manifest_vsphere() {
  local bosh_env
  bosh_env="$1"

  generate_manifest_generic "$bosh_env" \
    --vars-file "${bosh_env}/director-secrets.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/vsphere/cpi.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/vsphere/resource-pool.yml"
}

generate_manifest_openstack() {
  local bosh_env key_filename
  bosh_env="$1"
  key_filename="$2"

  generate_manifest_generic "$bosh_env" \
    --vars-file "${bosh_env}/director-secrets.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/openstack/cpi.yml" \
    --ops-file "$(repo_directory)/configurations/openstack/multi-tenant.yml" \
    --var-file private_key="${key_filename}"

}

generate_manifest_aws() {
  local bosh_env key_filename
  bosh_env="$1"
  key_filename="$2"

  generate_manifest_generic "$bosh_env" \
    --var-file private_key="${key_filename}"\
    --vars-file "${bosh_env}/director-secrets.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/aws/cpi.yml"
}

generate_manifest_generic() {
  local bosh_env
  bosh_env="$1"; shift
  iaas_specific_args="$@"

  bosh-cli int "$(repo_directory)/bosh-deployment/bosh.yml"  \
    --ops-file "$(repo_directory)/bosh-deployment/uaa.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/local-dns.yml" \
    --ops-file "$(repo_directory)/configurations/generic/dns-addresses.yml" \
    --ops-file "$(repo_directory)/bosh-deployment/credhub.yml" \
    --ops-file "$(repo_directory)/configurations/generic/bosh-admin-client.yml" \
    --vars-file "${bosh_env}/director.yml" \
    ${iaas_specific_args} \
    ${BOSH_EXTRA_OPS}
}

[[ "$0" == "${BASH_SOURCE[0]}" ]] && main "$@"
