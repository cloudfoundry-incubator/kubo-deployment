#!/usr/bin/env bash

set -e -o pipefail

[[ -z "${DEBUG:-}" ]] || set -x

print_usage() {
cat << EOF
  Usage: $0 <BOSH environment path>
EOF
}

repo_directory() {
  echo -n "$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
}

ops_string_for_service_accounts() {
  local bosh_env=$1
  local ops_string=""

  if ! bosh int "${bosh_env}/director.yml" --path='/service_account_master' &> /dev/null; then
    ops_string="${ops_string} --ops-file=$(repo_directory)/manifests/ops-files/iaas/gcp/cloud-config/remove-service-account-master.yml"
  fi

  if ! bosh int "${bosh_env}/director.yml" --path='/service_account_worker' &> /dev/null; then
    ops_string="${ops_string} --ops-file=$(repo_directory)/manifests/ops-files/iaas/gcp/cloud-config/remove-service-account-worker.yml"
  fi
  echo "$ops_string"
}

main() {
  if [ $# -ne 1 ] ; then
    print_usage
    exit 1
  fi

  local bosh_env=$(cd "$1"; pwd)
  local bosh_iaas="$(bosh int ${bosh_env}/director.yml --path '/iaas')"
  local cloud_config
  local ops_string=""
  local cloud_args=""

  if [[ ! -z "${CLOUD_CONFIG_OPS_FILES}" ]]; then
    while IFS=':' read -ra cloud_config_ops_files; do
      for ops_file in "${cloud_config_ops_files[@]}"; do
        ops_string="${ops_string} --ops-file=${ops_file}"
      done
    done <<< "${CLOUD_CONFIG_OPS_FILES}"
  fi

  if [ "${bosh_iaas}" == "gcp" ]; then
     ops_string="${ops_string} $(ops_string_for_service_accounts "$bosh_env")"
  fi

  if [ "$(bosh int "${bosh_env}/director.yml" --path='/routing_mode')" == "cf" ]; then
    cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml)
  elif [ "$(bosh int "${bosh_env}/director.yml" --path='/routing_mode')" == "iaas" ]; then
    if [ "${bosh_iaas}" == "gcp" ]; then
       cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml --ops-file="$(repo_directory)/manifests/ops-files/iaas/gcp/cloud-config/load-balancer-target-pools.yml")
    elif [ "${bosh_iaas}" == "aws" ]; then
       cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml --ops-file="$(repo_directory)/manifests/ops-files/iaas/aws/cloud-config/lb.yml")
    elif [ "${bosh_iaas}" == "azure" ]; then
       cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml --ops-file="$(repo_directory)/manifests/ops-files/iaas/azure/cloud-config/lb.yml")
    else
       cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml)
    fi
  else
    cloud_args=$(echo -n "$(repo_directory)/configurations/${bosh_iaas}/cloud-config.yml" --vars-file ${bosh_env}/director.yml)
  fi

  bosh int ${cloud_args} ${ops_string}
}

[[ "$0" == "${BASH_SOURCE[0]}" ]] && main "$@"
