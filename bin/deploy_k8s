#!/bin/bash -e

set -o pipefail

[ -z "$DEBUG" ] || set -x


echo "====================================="
echo "|     BOSH K8S Cluster Deployer     |"
echo "====================================="
echo ""


print_usage() {
  echo "Usage: $(basename "$0") [BOSH_ENV] [DEPLOYMENT_NAME] [RELEASE_SOURCE]"
  echo ""
  echo "BOSH_ENV is the path to your BOSH environment configuration folder"
  echo ""
  echo "DEPLOYMENT_NAME is the name of your kubo deployment"
  echo ""
  echo "RELEASE_SOURCE specifies where to find the required BOSH releases"
  echo "  options:"
  echo "     dev    - Build a dev release from the local machine."
  echo "              Required binaries and repos should be in ../"
  echo "     public - (default) Use published releases from the internet"
  echo "     local  - Use local releases"
  echo "              Required binaries should be in ../"
  echo ""
}

main() {
  local bosh_env=$(cd "${1}"; pwd -P)
  local deployment_name="${2}"
  local release_source="${3}"

  if [ $# -ne 2 ] && [ $# -ne 3 ]; then
    print_usage
    exit  1
  fi

  if [ ! -e "${bosh_env}/iaas" ]; then
   echo "${bosh_env} is not a valid BOSH environment."
   echo "Please use 'generate_env_config' to create one."
   print_usage
   exit 1
  fi

  case ${release_source} in
    "dev"|"public"|"local") ;;
    "") release_source="public";;
    *) print_usage; exit 1;;
  esac


  pushd "$(dirname "$0")/.." > /dev/null
    . ./bin/lib/deploy_utils

    local bosh_director_name
    export_bosh_environment "${bosh_env}"
    bosh_director_name=$(get_setting "director.yml" /director_name)

    upload_stemcell
    upload_releases "${release_source}"
    set_cloud_config
    set_kubernetes_certificate_in_credhub "${bosh_director_name}/${deployment_name}/tls-kubernetes"
    deploy_to_bosh "$(bin/generate_service_manifest "${bosh_env}" "${deployment_name}")" "${deployment_name}"
  popd > /dev/null
}

set_kubernetes_certificate_in_credhub() {
  local secret_path=$1
  local credhub_user_password=$(get_setting "creds.yml" "/credhub_user_password")
  local credhub_api_url=https://$(get_setting "director.yml" "/internal_ip"):8844
  local tcp_router_ip=$(get_setting "director.yml" "/cf-tcp-router-name")

  credhub login -u credhub-user -p "${credhub_user_password}" -s "${credhub_api_url}" --skip-tls-validation
  credhub generate -n "${secret_path}" -t certificate -c "${tcp_router_ip}" -a "${tcp_router_ip}" -O
}

upload_releases() {
  local release_source=$1

  case ${release_source} in
    "dev")
      pushd ../ > /dev/null
        create_and_upload_release 'kubo-release'
      popd > /dev/null
      ;;
    "public")
       upload_release $(get_setting director.yml "/kubo_release_url")
      ;;
    "local")
      pushd ../ > /dev/null
        upload_release "kubo-release.tgz"
      popd > /dev/null
      ;;
    *)
      echo "unknown RELEASE_SOURCE: '${release_source}'"
      exit 1
    esac
}

upload_stemcell() {
  local director_name=$(get_setting director.yml /director_name)
  local stemcell_url=$(get_setting director.yml /stemcell_url)
  bosh-cli -e ${director_name} upload-stemcell ${stemcell_url}
}

main "$@"
